// 
//
//////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "RangeMaps.h"
#include "AssertBotE.h"

void CRangeMaps::SetRangeMap(RangeMap& range_map, unsigned char tmpRangeMap[], char w, char h, char x0, char y0)
{
	AssertBotE(w > 0 && h > 0 && 0 <= x0 && x0 < w && 0 <= y0 && y0 < h);

	if (range_map.range) delete[] range_map.range;

	range_map.range = new unsigned char [w * h];
	memcpy(range_map.range, tmpRangeMap, w * h * sizeof(unsigned char));
	range_map.w = w;
	range_map.h = h;
	range_map.x0 = x0;
	range_map.y0 = y0;
}

////////////////////////////////////////////////////////////////////////////
// private Funktionen
////////////////////////////////////////////////////////////////////////////

/// Diese Funktion berechnet die Reichweitenkarte anhand der aktuellen Techstufe <code>propTech</code> und schreibt
/// das Ergebnis in den Parameter <code>rangeMap</code>. Zusätzlich werden Referenzen auf paar Hilfsvariablen
/// übergeben.
void CRangeMaps::CalcRangeMap(RangeMap& range_map, BYTE propTech)
{
	int w = 0, h = 0, x0 = 0, y0 = 0;
	switch (propTech)
	{
	case 0: {
		unsigned char tmpRangeMap[] =
			{0, 0, 1, 1, 1, 0, 0,
			0, 1, 2, 2, 2, 1, 0,
			1, 2, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 2, 1,
			0, 1, 2, 2, 2, 1, 0,
			0, 0, 1, 1, 1, 0, 0};
			w = 7; h = 7; x0 = 3; y0 = 3;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 1: {
		unsigned char tmpRangeMap[] =
			{0, 0, 1, 1, 1, 0, 0,
			0, 1, 2, 2, 2, 1, 0,
			1, 2, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 2, 1,
			0, 1, 2, 2, 2, 1, 0,
			0, 0, 1, 1, 1, 0, 0};
			w = 7; h = 7; x0 = 3; y0 = 3;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 2: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 1, 1, 1, 0, 0, 0,
			0, 0, 1, 1, 1, 1, 1, 0, 0,
			0, 1, 1, 2, 2, 2, 1, 1, 0,
			1, 1, 2, 3, 3, 3, 2, 1, 1,
			1, 1, 2, 3, 3, 3, 2, 1, 1,
			1, 1, 2, 3, 3, 3, 2, 1, 1,
			0, 1, 1, 2, 2, 2, 1, 1, 0,
			0, 0, 1, 1, 1, 1, 1, 0, 0,
			0, 0, 0, 1, 1, 1, 0, 0, 0};
			w = 9, h = 9, x0 = 4, y0 = 4;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 3: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 1, 1, 1, 0, 0, 0,
			0, 0, 1, 2, 2, 2, 1, 0, 0,
			0, 1, 2, 2, 2, 2, 2, 1, 0,
			1, 2, 2, 3, 3, 3, 2, 2, 1,
			1, 2, 2, 3, 3, 3, 2, 2, 1,
			1, 2, 2, 3, 3, 3, 2, 2, 1,
			0, 1, 2, 2, 2, 2, 2, 1, 0,
			0, 0, 1, 2, 2, 2, 1, 0, 0,
			0, 0, 0, 1, 1, 1, 0, 0, 0};
			w = 9, h = 9, x0 = 4, y0 = 4;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 4: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 1, 1, 1, 0, 0, 0,
			0, 0, 1, 2, 2, 2, 1, 0, 0,
			0, 1, 2, 3, 3, 3, 2, 1, 0,
			1, 2, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 2, 1,
			0, 1, 2, 3, 3, 3, 2, 1, 0,
			0, 0, 1, 2, 2, 2, 1, 0, 0,
			0, 0, 0, 1, 1, 1, 0, 0, 0};
			w = 9, h = 9, x0 = 4, y0 = 4;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 5: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
			0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0,
			0, 1, 1, 2, 3, 3, 3, 2, 1, 1, 0,
			1, 1, 2, 3, 3, 3, 3, 3, 2, 1, 1,
			1, 1, 2, 3, 3, 3, 3, 3, 2, 1, 1,
			1, 1, 2, 3, 3, 3, 3, 3, 2, 1, 1,
			0, 1, 1, 2, 3, 3, 3, 2, 1, 1, 0,
			0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0,
			0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0};
			w = 11, h = 11, x0 = 5, y0 = 5;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 6: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0,
			0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0,
			0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0,
			1, 2, 2, 3, 3, 3, 3, 3, 2, 2, 1,
			1, 2, 2, 3, 3, 3, 3, 3, 2, 2, 1,
			1, 2, 2, 3, 3, 3, 3, 3, 2, 2, 1,
			0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0,
			0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0,
			0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0};
			w = 11, h = 11, x0 = 5, y0 = 5;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 7: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0,
			0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0,
			0, 1, 2, 3, 3, 3, 3, 3, 2, 1, 0,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			0, 1, 2, 3, 3, 3, 3, 3, 2, 1, 0,
			0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0,
			0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0};
			w = 11, h = 11, x0 = 5, y0 = 5;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 8: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0,
			0, 0, 1, 1, 2, 3, 3, 3, 2, 1, 1, 0, 0,
			0, 1, 1, 2, 3, 3, 3, 3, 3, 2, 1, 1, 0,
			1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1,
			1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1,
			1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1,
			0, 1, 1, 2, 3, 3, 3, 3, 3, 2, 1, 1, 0,
			0, 0, 1, 1, 2, 3, 3, 3, 2, 1, 1, 0, 0,
			0, 0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0};
			w = 13, h = 13, x0 = 6, y0 = 6;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 9: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0,
			0, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, 0,
			0, 1, 2, 2, 3, 3, 3, 3, 3, 2, 2, 1, 0,
			1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
			1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
			1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
			0, 1, 2, 2, 3, 3, 3, 3, 3, 2, 2, 1, 0,
			0, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, 0,
			0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0};
			w = 13, h = 13, x0 = 6, y0 = 6;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	case 10: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0, 0,
			0, 0, 1, 2, 3, 3, 3, 3, 3, 2, 1, 0, 0,
			0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0,
			0, 0, 1, 2, 3, 3, 3, 3, 3, 2, 1, 0, 0,
			0, 0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0};
			w = 13, h = 13, x0 = 6, y0 = 6;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	 default: {
		unsigned char tmpRangeMap[] =
			{0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0,
			0, 0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0, 0,
			0, 0, 1, 2, 3, 3, 3, 3, 3, 2, 1, 0, 0,
			0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1,
			0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0,
			0, 0, 1, 2, 3, 3, 3, 3, 3, 2, 1, 0, 0,
			0, 0, 0, 1, 2, 3, 3, 3, 2, 1, 0, 0, 0,
			0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0};
			w = 13, h = 13, x0 = 6, y0 = 6;
			SetRangeMap(range_map, tmpRangeMap, w, h, x0, y0);
			break;}
	}
}

